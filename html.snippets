# vim:set foldenable foldmethod=marker:
# ********************************************************************
# i 表示片段可在句中被触发。默认是只有在前面有多个空格或者在行首时才会被触发。
# A 表示片段会被自动触发
# w 表示片段只会在关键词为单独单词的情况下被触发
# r 表示关键词使用正则表达式。正则表达式必须用 两个引号' '包围
# b 表示只有在一行的开头才会被触发
# ********************************************************************
# 使用该snippets而不是默认文件
priority 0
#=================================================================================================
#常见html tags{{{

snippet dtype "HTML - 5.0 (doctype)" b
<!DOCTYPE html>
endsnippet

snippet `(br|hr)` "" wr
<`!p snip.rv = match.group(1)` />$1
endsnippet

snippet `(body|div|ul|ol|video|html|head|pre|script)` "block level elements" wr
<`!p snip.rv = match.group(1)`>
  ${0:${VISUAL}}
</`!p snip.rv = match.group(1)`>
endsnippet

snippet img "<img>"
<img src="$1" alt="$2" />
endsnippet

snippet `(p|span|h[1-6]|em|strong|li|title|code|pre)` "inline elements" wr
<`!p snip.rv = match.group(1)`>${1:${VISUAL}}</`!p snip.rv = match.group(1)`>
endsnippet

snippet "(id|src|width|height|class|style|title)" "add an attribute" wr
`!p
import re
snip.rv = re.search("(<[^>]*)(>(?:.|\n)*)",snip.v.text).group(1)
`  `!p snip.rv = match.group(1)`="$1"`!p
import re
snip.rv = re.search("(<[^>]*)(>(?:.|\n)*)",snip.v.text).group(2)
`
endsnippet

snippet a "Link" w
<a href="${1:}"${2: target="_blank"}>
${3:${VISUAL}}</a>
endsnippet

snippet link "link css" w
<link href="${1:css/${2}}" type="${3:text/css}" rel="${4:stylesheet}">
endsnippet

snippet // "comments" 
<!--
${1:${VISUAL}}
-->${0}
endsnippet

#}}}
#=================================================================================================
